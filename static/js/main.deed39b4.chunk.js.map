{"version":3,"sources":["main/main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","state","nums","hideCreate","hideSorts","initial","createNums","bind","bubbleSort","selectionSort","insertionSort","quickSort","animate","numBars","this","document","getElementById","value","console","log","i","push","Math","floor","random","setState","swaps","disabled","bars","getElementsByClassName","length","style","height","toString","speed","parseInt","animating","setInterval","bar1","bar2","backgroundColor","temp","clearInterval","setTimeout","j","min","minIndex","prevMinIndex","k","sort","index","mid","partition","numberOfBars","buttons","id","onChange","type","max","for","className","onClick","map","idx","width","margin","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.deed39b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nums: [],\r\n      hideCreate: false,\r\n      hideSorts: true,\r\n      initial: true\r\n    }\r\n    this.createNums = this.createNums.bind(this);\r\n    this.bubbleSort = this.bubbleSort.bind(this);\r\n    this.selectionSort = this.selectionSort.bind(this);\r\n    this.insertionSort = this.insertionSort.bind(this);\r\n    this.quickSort = this.quickSort.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  /*creates the array of numbers that will be sorted*/\r\n  createNums(){\r\n    let numBars;\r\n    if(this.state.initial){\r\n      numBars = 50;\r\n    } else {\r\n      numBars = document.getElementById('numBarsSlider').value;\r\n    }\r\n    let nums = [];\r\n    console.log(numBars)\r\n    for(let i = 0; i < numBars; i++){\r\n      nums.push(Math.floor(Math.random() * 50))\r\n    }\r\n\r\n    this.setState({\r\n      nums: nums,\r\n      hideSorts: false,\r\n      initial: false\r\n    })\r\n  }\r\n\r\n  /*animates the sorting process*/\r\n  animate(swaps){\r\n    document.getElementById('numBarsSlider').disabled = true;\r\n    document.getElementById('speedSlider').disabled = true;\r\n    document.getElementById('createGraph').disabled = true;\r\n\r\n    const bars = document.getElementsByClassName('bar')\r\n    for(let i = 0; i < bars.length; i++){\r\n        const bar = bars[i].style;\r\n        bar.height = this.state.nums[i].toString() + 'vh';\r\n    }\r\n\r\n\r\n    let i = 0;\r\n    let speed = parseInt(document.getElementById('speedSlider').value);\r\n    let animating = setInterval(animate, (11 - speed / 10) * 4);\r\n\r\n    function animate(){\r\n      const bar1 = bars[swaps[i][0]].style;\r\n      const bar2 = bars[swaps[i][1]].style;\r\n\r\n      /*change color of the bars being swapped*/\r\n      bar1.backgroundColor = 'blue';\r\n      bar2.backgroundColor = 'blue';\r\n\r\n      /*swap height of the two bars*/\r\n      if(swaps[i][2]){\r\n        let temp = bar1.height;\r\n        bar1.height = bar2.height;\r\n        bar2.height = temp;\r\n      }\r\n      i++\r\n      if(i === swaps.length){\r\n        clearInterval(animating);\r\n        document.getElementById('numBarsSlider').disabled = false;\r\n        document.getElementById('speedSlider').disabled = false;\r\n        document.getElementById('createGraph').disabled = false;\r\n      }\r\n\r\n      setTimeout(function(){\r\n        bar1.backgroundColor = 'gray';\r\n        bar2.backgroundColor = 'gray';\r\n      }, 20)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  bubbleSort(){\r\n\r\n    let nums = [...this.state.nums]\r\n    let j = nums.length - 1\r\n    let swaps = []\r\n\r\n    while(j > 0){\r\n      for(let i = 0; i < j; i++){\r\n        swaps.push([i, i + 1, false])\r\n        if(nums[i] > nums[i + 1]){\r\n          let temp = nums[i]\r\n          nums[i] = nums[i + 1]\r\n          nums[i + 1] = temp\r\n          swaps[swaps.length - 1][2] = true\r\n        }\r\n      }\r\n      j--\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n\r\n  selectionSort(){\r\n\r\n    let nums = [...this.state.nums]\r\n    let swaps = []\r\n\r\n    for(let i = 0; i < nums.length - 1; i++){\r\n      let min = nums[i]\r\n      let minIndex = i\r\n      let prevMinIndex = swaps.length\r\n\r\n\r\n      for(let j = i + 1; j < nums.length; j++){\r\n        swaps.push([i, j, false])\r\n        if(nums[j] < min){\r\n          swaps[prevMinIndex][2] = false\r\n          prevMinIndex = swaps.length - 1\r\n          swaps[prevMinIndex][2] = true\r\n          min = nums[j]\r\n          minIndex = j\r\n        }\r\n      }\r\n\r\n      let temp = nums[i]\r\n      nums[i] = nums[minIndex]\r\n      nums[minIndex] = temp\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n  insertionSort(){\r\n\r\n    var nums = [...this.state.nums]\r\n    var swaps = []\r\n\r\n    for(let i = 1; i < nums.length; i++){\r\n      var j = i\r\n      var k = i - 1\r\n\r\n      while(j !== 0 && nums[j] < nums[k]){\r\n        swaps.push([k, j, true])\r\n        var temp = nums[k]\r\n        nums[k] = nums[j]\r\n        nums[j] = temp\r\n        j--\r\n        k--\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n\r\n  quickSort(){\r\n\r\n    var nums = [...this.state.nums]\r\n    var swaps = []\r\n    sort(nums, 0, nums.length - 1)\r\n\r\n    function sort(nums, i, j){\r\n      var index\r\n      if(nums.length > 1){\r\n        index = partition(nums, i, j)\r\n        if(i < index - 1){\r\n          sort(nums, i, index - 1)\r\n        }\r\n        if(j >= index){\r\n          sort(nums, index, j)\r\n        }\r\n      }\r\n    }\r\n\r\n    function partition(nums, i, j) {\r\n      var mid = nums[Math.floor((i + j) / 2)]\r\n\r\n      while(i <= j){\r\n        swaps.push([i, j, false]);\r\n        while(nums[i] < mid){\r\n          i++;\r\n          swaps.push([i, j, false]);\r\n        }\r\n        while(nums[j] > mid){\r\n          j--;\r\n          swaps.push([i, j, false]);\r\n        }\r\n        if(i <= j){\r\n          swaps[swaps.length - 1][2] = true;\r\n          var temp = nums[i];\r\n          nums[i] = nums[j];\r\n          nums[j] = temp;\r\n          i++;\r\n          j--;\r\n        }\r\n      }\r\n      return i\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps);\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    let numberOfBars = 0;\r\n    if(this.state.initial){\r\n      this.createNums();\r\n    } else {\r\n      numberOfBars = document.getElementById('numBarsSlider').value;\r\n    }\r\n\r\n\r\n    let buttons = 'buttons';\r\n    if(this.state.hideSorts){\r\n      buttons = 'buttons hide';\r\n    }\r\n    let nums = this.state.nums;\r\n    return(\r\n      <div id='main'>\r\n        <div>\r\n          <input onChange={this.createNums} type=\"range\" id=\"numBarsSlider\" min=\"2\" max=\"100\"/>\r\n          <label for=\"numBars\">Number of Bars: {numberOfBars}</label>\r\n        </div>\r\n        <div>\r\n          <input type=\"range\" id=\"speedSlider\" min=\"1\" max=\"100\"/>\r\n          <label for=\"numBars\">Sorting Speed</label>\r\n        </div>\r\n        <button id='createGraph' className='buttons' onClick={this.createNums}>New Bars</button>\r\n        <button id='bubbleSort' className={buttons} onClick={this.bubbleSort}>Bubble Sort</button>\r\n        <button id='selectionSort' className={buttons} onClick={this.selectionSort}>Selection Sort</button>\r\n        <button id='insertionSort' className={buttons} onClick={this.insertionSort}>Insertion Sort</button>\r\n        <button id='quickSort' className={buttons} onClick={this.quickSort}>Quick Sort</button>\r\n        <div id='bars'>\r\n          {\r\n            nums.map((i,idx) => {\r\n              return(\r\n                <div\r\n                  className='bar'\r\n                  key={idx}\r\n                  style={{\r\n                      backgroundColor: 'gray',\r\n                      height: `${i}vh`,\r\n                      width: `${100 / this.state.nums.length / 2}vw`,\r\n                      margin: `${100 / this.state.nums.length / 4}vw`\r\n                    }}>\r\n                </div>\r\n            )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.scss';\n\nimport Main from './main/main'\n\nfunction App() {\n  return (\n    <div>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}