{"version":3,"sources":["main/main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","state","nums","hideCreate","hideSorts","createNums","bind","bubbleSort","selectionSort","insertionSort","quickSort","animate","i","push","Math","floor","random","this","setState","swaps","document","getElementById","disabled","bars","getElementsByClassName","length","style","height","toString","animating","setInterval","bar1","bar2","backgroundColor","temp","clearInterval","setTimeout","j","min","minIndex","prevMinIndex","k","sort","index","mid","partition","sortIds","id","onClick","className","map","idx","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uPA0PeA,E,kDAvPb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,YAAY,EACZC,WAAW,GAEb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBACjB,EAAKK,QAAU,EAAKA,QAAQL,KAAb,gBAZE,E,yDAmBjB,IADA,IAAIJ,EAAO,GACHU,EAAI,EAAGA,EAAI,IAAKA,IACtBV,EAAKW,KAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,WAG5BC,KAAKC,SAAS,CACZhB,KAAMA,EACNE,WAAW,M,8BAKPe,GACNC,SAASC,eAAe,eAAeC,UAAW,EAGlD,IADA,IAAMC,EAAOH,SAASI,uBAAuB,OACrCZ,EAAI,EAAGA,EAAIW,EAAKE,OAAQb,IAAI,CACpBW,EAAKX,GAAGc,MAChBC,OAASV,KAAKhB,MAAMC,KAAKU,GAAGgB,WAAa,KAIjD,IAAIhB,EAAI,EACJiB,EAAYC,YAAYnB,EAAS,GAErC,SAASA,IACP,IAAMoB,EAAOR,EAAKJ,EAAMP,GAAG,IAAIc,MACzBM,EAAOT,EAAKJ,EAAMP,GAAG,IAAIc,MAO/B,GAJAK,EAAKE,gBAAkB,OACvBD,EAAKC,gBAAkB,OAGpBd,EAAMP,GAAG,GAAG,CACb,IAAIsB,EAAOH,EAAKJ,OAChBI,EAAKJ,OAASK,EAAKL,OACnBK,EAAKL,OAASO,IAEhBtB,IACSO,EAAMM,SACbU,cAAcN,GACdT,SAASC,eAAe,eAAeC,UAAW,GAGpDc,YAAW,WACTL,EAAKE,gBAAkB,OACvBD,EAAKC,gBAAkB,SACtB,O,mCAYL,IAJA,IAAI/B,EAAI,YAAOe,KAAKhB,MAAMC,MACtBmC,EAAInC,EAAKuB,OAAS,EAClBN,EAAQ,GAENkB,EAAI,GAAE,CACV,IAAI,IAAIzB,EAAI,EAAGA,EAAIyB,EAAGzB,IAEpB,GADAO,EAAMN,KAAK,CAACD,EAAGA,EAAI,GAAG,IACnBV,EAAKU,GAAKV,EAAKU,EAAI,GAAG,CACvB,IAAIsB,EAAOhC,EAAKU,GAChBV,EAAKU,GAAKV,EAAKU,EAAI,GACnBV,EAAKU,EAAI,GAAKsB,EACdf,EAAMA,EAAMM,OAAS,GAAG,IAAK,EAGjCY,IAGFpB,KAAKC,SAAS,CACZd,WAAW,IAGba,KAAKN,QAAQQ,K,sCASb,IAHA,IAAIjB,EAAI,YAAOe,KAAKhB,MAAMC,MACtBiB,EAAQ,GAEJP,EAAI,EAAGA,EAAIV,EAAKuB,OAAS,EAAGb,IAAI,CAMtC,IALA,IAAI0B,EAAMpC,EAAKU,GACX2B,EAAW3B,EACX4B,EAAerB,EAAMM,OAGjBY,EAAIzB,EAAI,EAAGyB,EAAInC,EAAKuB,OAAQY,IAClClB,EAAMN,KAAK,CAACD,EAAGyB,GAAG,IACfnC,EAAKmC,GAAKC,IACXnB,EAAMqB,GAAc,IAAK,EAEzBrB,EADAqB,EAAerB,EAAMM,OAAS,GACV,IAAK,EACzBa,EAAMpC,EAAKmC,GACXE,EAAWF,GAIf,IAAIH,EAAOhC,EAAKU,GAChBV,EAAKU,GAAKV,EAAKqC,GACfrC,EAAKqC,GAAYL,EAGnBjB,KAAKC,SAAS,CACZd,WAAW,IAGba,KAAKN,QAAQQ,K,sCAQb,IAHA,IAAIjB,EAAI,YAAOe,KAAKhB,MAAMC,MACtBiB,EAAQ,GAEJP,EAAI,EAAGA,EAAIV,EAAKuB,OAAQb,IAI9B,IAHA,IAAIyB,EAAIzB,EACJ6B,EAAI7B,EAAI,EAEA,IAANyB,GAAWnC,EAAKmC,GAAKnC,EAAKuC,IAAG,CACjCtB,EAAMN,KAAK,CAAC4B,EAAGJ,GAAG,IAClB,IAAIH,EAAOhC,EAAKuC,GAChBvC,EAAKuC,GAAKvC,EAAKmC,GACfnC,EAAKmC,GAAKH,EACVG,IACAI,IAIJxB,KAAKC,SAAS,CACZd,WAAW,IAGba,KAAKN,QAAQQ,K,kCAMb,IAAIjB,EAAI,YAAOe,KAAKhB,MAAMC,MACtBiB,EAAQ,IAGZ,SAASuB,EAAKxC,EAAMU,EAAGyB,GACrB,IAAIM,EACDzC,EAAKuB,OAAS,IACfkB,EAUJ,SAAmBzC,EAAMU,EAAGyB,GAC1B,IAAIO,EAAM1C,EAAKY,KAAKC,OAAOH,EAAIyB,GAAK,IAEpC,KAAMzB,GAAKyB,GAAE,CAEX,IADAlB,EAAMN,KAAK,CAACD,EAAGyB,GAAG,IACZnC,EAAKU,GAAKgC,GACdhC,IACAO,EAAMN,KAAK,CAACD,EAAGyB,GAAG,IAEpB,KAAMnC,EAAKmC,GAAKO,GACdP,IACAlB,EAAMN,KAAK,CAACD,EAAGyB,GAAG,IAEpB,GAAGzB,GAAKyB,EAAE,CACRlB,EAAMA,EAAMM,OAAS,GAAG,IAAK,EAC7B,IAAIS,EAAOhC,EAAKU,GAChBV,EAAKU,GAAKV,EAAKmC,GACfnC,EAAKmC,GAAKH,EACVtB,IACAyB,KAGJ,OAAOzB,EAhCGiC,CAAU3C,EAAMU,EAAGyB,GACxBzB,EAAI+B,EAAQ,GACbD,EAAKxC,EAAMU,EAAG+B,EAAQ,GAErBN,GAAKM,GACND,EAAKxC,EAAMyC,EAAON,IAVxBK,CAAKxC,EAAM,EAAGA,EAAKuB,OAAS,GAwC5BR,KAAKC,SAAS,CACZd,WAAW,IAGba,KAAKN,QAAQQ,K,+BAKb,IAAI2B,EAAU,aACX7B,KAAKhB,MAAMG,YACZ0C,EAAU,mBAGZ,IAAI5C,EAAOe,KAAKhB,MAAMC,KACtB,OACE,sBAAK6C,GAAG,OAAR,UACE,wBAAQA,GAAG,cAAcC,QAAS/B,KAAKZ,WAAvC,0BACA,wBAAQ0C,GAAG,aAAaE,UAAWH,EAASE,QAAS/B,KAAKV,WAA1D,yBACA,wBAAQwC,GAAG,gBAAgBE,UAAWH,EAASE,QAAS/B,KAAKT,cAA7D,4BACA,wBAAQuC,GAAG,gBAAgBE,UAAWH,EAASE,QAAS/B,KAAKR,cAA7D,4BACA,wBAAQsC,GAAG,YAAYE,UAAWH,EAASE,QAAS/B,KAAKP,UAAzD,wBACA,qBAAKqC,GAAG,OAAR,SAEI7C,EAAKgD,KAAI,SAACtC,EAAEuC,GACV,OACE,qBACEF,UAAU,MAEVvB,MAAO,CACHO,gBAAiB,OACjBN,OAAO,GAAD,OAAKf,EAAL,QAHLuC,e,GAzOJC,aCWJC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAASC,eAAe,SAM1BiC,M","file":"static/js/main.24e1d4c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nums: [],\r\n      hideCreate: false,\r\n      hideSorts: true\r\n    }\r\n    this.createNums = this.createNums.bind(this)\r\n    this.bubbleSort = this.bubbleSort.bind(this)\r\n    this.selectionSort = this.selectionSort.bind(this)\r\n    this.insertionSort = this.insertionSort.bind(this)\r\n    this.quickSort = this.quickSort.bind(this)\r\n    this.animate = this.animate.bind(this)\r\n  }\r\n\r\n  /*creates the array of numbers that will be sorted*/\r\n  createNums(){\r\n\r\n    var nums = []\r\n    for(let i = 0; i < 100; i++){\r\n      nums.push(Math.floor(Math.random() * 50))\r\n    }\r\n\r\n    this.setState({\r\n      nums: nums,\r\n      hideSorts: false\r\n    })\r\n  }\r\n\r\n  /*animates the sorting process*/\r\n  animate(swaps){\r\n    document.getElementById('createGraph').disabled = true\r\n\r\n    const bars = document.getElementsByClassName('bar')\r\n    for(let i = 0; i < bars.length; i++){\r\n        const bar = bars[i].style\r\n        bar.height = this.state.nums[i].toString() + 'vh'\r\n    }\r\n\r\n\r\n    var i = 0\r\n    var animating = setInterval(animate, 4)\r\n\r\n    function animate(){\r\n      const bar1 = bars[swaps[i][0]].style\r\n      const bar2 = bars[swaps[i][1]].style\r\n\r\n      /*change color of the bars being swapped*/\r\n      bar1.backgroundColor = 'blue'\r\n      bar2.backgroundColor = 'blue'\r\n\r\n      /*swap height of the two bars*/\r\n      if(swaps[i][2]){\r\n        let temp = bar1.height\r\n        bar1.height = bar2.height\r\n        bar2.height = temp\r\n      }\r\n      i++\r\n      if(i === swaps.length){\r\n        clearInterval(animating)\r\n        document.getElementById('createGraph').disabled = false\r\n      }\r\n\r\n      setTimeout(function(){\r\n        bar1.backgroundColor = 'gray'\r\n        bar2.backgroundColor = 'gray'\r\n      }, 20)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  bubbleSort(){\r\n\r\n    var nums = [...this.state.nums]\r\n    var j = nums.length - 1\r\n    var swaps = []\r\n\r\n    while(j > 0){\r\n      for(let i = 0; i < j; i++){\r\n        swaps.push([i, i + 1, false])\r\n        if(nums[i] > nums[i + 1]){\r\n          var temp = nums[i]\r\n          nums[i] = nums[i + 1]\r\n          nums[i + 1] = temp\r\n          swaps[swaps.length - 1][2] = true\r\n        }\r\n      }\r\n      j--\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n\r\n  selectionSort(){\r\n\r\n    var nums = [...this.state.nums]\r\n    var swaps = []\r\n\r\n    for(let i = 0; i < nums.length - 1; i++){\r\n      var min = nums[i]\r\n      var minIndex = i\r\n      var prevMinIndex = swaps.length\r\n\r\n\r\n      for(let j = i + 1; j < nums.length; j++){\r\n        swaps.push([i, j, false])\r\n        if(nums[j] < min){\r\n          swaps[prevMinIndex][2] = false\r\n          prevMinIndex = swaps.length - 1\r\n          swaps[prevMinIndex][2] = true\r\n          min = nums[j]\r\n          minIndex = j\r\n        }\r\n      }\r\n\r\n      var temp = nums[i]\r\n      nums[i] = nums[minIndex]\r\n      nums[minIndex] = temp\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n  insertionSort(){\r\n\r\n    var nums = [...this.state.nums]\r\n    var swaps = []\r\n\r\n    for(let i = 1; i < nums.length; i++){\r\n      var j = i\r\n      var k = i - 1\r\n\r\n      while(j !== 0 && nums[j] < nums[k]){\r\n        swaps.push([k, j, true])\r\n        var temp = nums[k]\r\n        nums[k] = nums[j]\r\n        nums[j] = temp\r\n        j--\r\n        k--\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n\r\n  quickSort(){\r\n\r\n    var nums = [...this.state.nums]\r\n    var swaps = []\r\n    sort(nums, 0, nums.length - 1)\r\n\r\n    function sort(nums, i, j){\r\n      var index\r\n      if(nums.length > 1){\r\n        index = partition(nums, i, j)\r\n        if(i < index - 1){\r\n          sort(nums, i, index - 1)\r\n        }\r\n        if(j >= index){\r\n          sort(nums, index, j)\r\n        }\r\n      }\r\n    }\r\n\r\n    function partition(nums, i, j) {\r\n      var mid = nums[Math.floor((i + j) / 2)]\r\n\r\n      while(i <= j){\r\n        swaps.push([i, j, false])\r\n        while(nums[i] < mid){\r\n          i++\r\n          swaps.push([i, j, false])\r\n        }\r\n        while(nums[j] > mid){\r\n          j--\r\n          swaps.push([i, j, false])\r\n        }\r\n        if(i <= j){\r\n          swaps[swaps.length - 1][2] = true\r\n          var temp = nums[i]\r\n          nums[i] = nums[j]\r\n          nums[j] = temp\r\n          i++\r\n          j--\r\n        }\r\n      }\r\n      return i\r\n    }\r\n\r\n    this.setState({\r\n      hideSorts: true\r\n    })\r\n\r\n    this.animate(swaps)\r\n  }\r\n\r\n\r\n  render(){\r\n    var sortIds = 'sortButton'\r\n    if(this.state.hideSorts){\r\n      sortIds = 'sortButton hide'\r\n    }\r\n\r\n    var nums = this.state.nums\r\n    return(\r\n      <div id='main'>\r\n        <button id='createGraph' onClick={this.createNums}>Create graph</button>\r\n        <button id='bubbleSort' className={sortIds} onClick={this.bubbleSort}>Bubble Sort</button>\r\n        <button id='selectionSort' className={sortIds} onClick={this.selectionSort}>Selection Sort</button>\r\n        <button id='insertionSort' className={sortIds} onClick={this.insertionSort}>Insertion Sort</button>\r\n        <button id='quickSort' className={sortIds} onClick={this.quickSort}>Quick Sort</button>\r\n        <div id='bars'>\r\n          {\r\n            nums.map((i,idx) => {\r\n              return(\r\n                <div\r\n                  className=\"bar\"\r\n                  key={idx}\r\n                  style={{\r\n                      backgroundColor: 'gray',\r\n                      height: `${i}vh`,\r\n                    }}>\r\n                </div>\r\n            )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport Main from './main/main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}